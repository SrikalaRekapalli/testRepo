{    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",    "contentVersion": "1.0.0.0",    "parameters": {        "location": {            "type": "string",            "metadata": {                "description": "Location"            }        },        "virtualNetworkNewOrExisting": {            "type": "string",            "defaultValue": "new",            "allowedValues": [                "new",                "existing"            ],            "metadata": {                "description": "Identifies whether to use new or existing Virtual Network"            }        },        "virtualNetworkExistingRGName": {            "type": "string",            "defaultValue": "",            "metadata": {                "description": "Name of resource group of existing Virtual Network (if applicable)"            }        },        "virtualNetworkName": {            "type": "string",            "metadata": {                "description": "Name of the virtual network that the consumer wants to use"            }        },        "virtualNetworkAddressPrefix": {            "type": "string",            "defaultValue": "10.0.0.0/16",            "metadata": {                "description": "Virtual network address CIDR"            }        },        "subnet1Prefix": {            "type": "string",            "defaultValue": "10.0.2.0/24",            "metadata": {                "description": "Subnet 1 Prefix"            }        },        "subnet1Name": {            "type": "string",            "defaultValue": "backendSubnet",            "metadata": {                "description": "Subnet for the Search Head"            }        },        "subnet1StartAddress": {            "type": "string",            "defaultValue": "10.0.0.20",            "metadata": {                "description": "Search Head subnet start address"            }        },        "baseUrl": {            "type": "string",            "metadata": {                "description": "Base URL for Marketplace",                "artifactsBaseUrl": ""            },            "defaultValue": "https://raw.githubusercontent.com/pradeepts/testRepo/master/"        },        "networkInterfaceName": {            "type": "string",            "metadata": {                "description": "This is the prefix name of the Network interfaces"            }        },        "loadBalancerName": {            "type": "string",            "metadata": {                "description": "This is the name of the load balancer"            }        },        "adminUsername": {            "type": "string",            "metadata": {                "description": "Admin username"            }        },        "adminPassword": {            "type": "securestring",            "metadata": {                "description": "Admin password"            }        },        "imagePublisher": {            "type": "string",            "defaultValue": "MicrosoftWindowsServer",            "metadata": {                "description": "Image Publisher"            }        },        "vmNamePrefix": {            "type": "string",            "defaultValue": "BackendVM",            "metadata": {                "description": "Prefix to use for VM names"            }        },        "imageOffer": {            "type": "string",            "defaultValue": "WindowsServer",            "metadata": {                "description": "Image Offer"            }        },        "imageSKU": {            "type": "string",            "defaultValue": "2012-R2-Datacenter",            "metadata": {                "description": "Image SKU"            }        },        "storageAccountName": {            "type": "string",            "metadata": {                "description": "Storage account name"            }        },        "vmSize": {            "type": "string",            "defaultValue": "Standard_D1",            "metadata": {                "description": "This is the allowed list of VM sizes"            }        }    },        "variables": {        "availabilitySetName": "AvSet",        "storageAccountType": "Standard_LRS",        "subnetName": "[parameters('subnet1Name')]",        "vnetId-new": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",         "vnetId-existing": "[resourceId(parameters('virtualNetworkExistingRGName'),'Microsoft.Network/virtualNetworks/',parameters('virtualNetworkName'))]",         "vnetID": "[variables(concat('vnetId-', parameters('virtualNetworkNewOrExisting')))]",         "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetName'))]",        "numberOfInstances": 2,        "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]",        "virtualNetworkTemplateUrl": "[concat(parameters('baseUrl'),'vnet-', parameters('virtualNetworkNewOrExisting'), '.json')]",        "networkSettings": {            "virtualNetworkName": "[parameters('virtualNetworkName')]",            "virtualNetworkExistingRGName": "[parameters('virtualNetworkExistingRGName')]",            "virtualNetworkAddressPrefix": "[parameters('virtualNetworkAddressPrefix')]",            "subnet": {                "markLogicSubnet": {                    "name": "[variables('subnetName')]",                    "prefix": "[parameters('subnet1Prefix')]"                }            },            "statics": {                "standaloneIp": "[parameters('subnet1StartAddress')]"            }        }    },    "resources": [        {            "apiVersion": "2015-05-01-preview",            "type": "Microsoft.Storage/storageAccounts",            "name": "[parameters('storageAccountName')]",            "location": "[resourceGroup().location]",            "properties": {                "accountType": "[variables('storageAccountType')]"            }        },        {            "apiVersion": "2015-05-01-preview",            "type": "Microsoft.Compute/availabilitySets",            "name": "[variables('availabilitySetName')]",            "location": "[resourceGroup().location]"        },        {            "name": "virtual-network",            "type": "Microsoft.Resources/deployments",            "apiVersion": "2015-01-01",            "comments": "Virtual network deployment",            "properties": {                "mode": "Incremental",                "templateLink": {                    "uri": "[variables('virtualNetworkTemplateUrl')]",                    "contentVersion": "1.0.0.0"                },                "parameters": {                    "location": {                        "value": "[parameters('location')]"                    },                    "networkSettings": {                        "value": "[variables('networkSettings')]"                    }                }            }        },        {            "apiVersion": "2015-05-01-preview",            "type": "Microsoft.Network/networkInterfaces",            "name": "[concat(parameters('networkInterfaceName'), copyindex())]",            "location": "[resourceGroup().location]",            "copy": {                "name": "nicLoop",                "count": "[variables('numberOfInstances')]"            },            "dependsOn": [                "virtual-network",                "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"            ],            "properties": {                "ipConfigurations": [                    {                        "name": "ipconfig1",                        "properties": {                            "privateIPAllocationMethod": "Dynamic",                            "subnet": {                                "id": "[variables('subnetRef')]"                            },                            "loadBalancerBackendAddressPools": [                                {                                    "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"                                }                            ]                        }                    }                ]            }        },        {            "apiVersion": "2015-05-01-preview",            "type": "Microsoft.Network/loadBalancers",            "name": "[parameters('loadBalancerName')]",            "location": "[resourceGroup().location]",            "dependsOn": [                "virtual-network"            ],            "properties": {                "frontendIPConfigurations": [                    {                        "properties": {                            "subnet": {                                "id": "[variables('subnetRef')]"                            },                            "privateIPAddress": "10.0.2.6",                            "privateIPAllocationMethod": "Static"                        },                        "name": "LoadBalancerFrontend"                    }                ],                "backendAddressPools": [                    {                        "name": "BackendPool1"                    }                ],                "loadBalancingRules": [                    {                        "properties": {                            "frontendIPConfiguration": {                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"                            },                            "backendAddressPool": {                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"                            },                            "probe": {                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/lbprobe')]"                            },                            "protocol": "Tcp",                            "frontendPort": 80,                            "backendPort": 80,                            "idleTimeoutInMinutes": 15                        },                        "Name": "lbrule"                    }                ],                "probes": [                    {                        "properties": {                            "protocol": "Tcp",                            "port": 80,                            "intervalInSeconds": 15,                            "numberOfProbes": 2                        },                        "name": "lbprobe"                    }                ]            }        },        {            "apiVersion": "2015-06-15",            "type": "Microsoft.Compute/virtualMachines",            "name": "[concat(parameters('vmNamePrefix'), copyindex())]",            "copy": {                "name": "virtualMachineLoop",                "count": "[variables('numberOfInstances')]"            },            "location": "[resourceGroup().location]",            "dependsOn": [                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'), copyindex())]",                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"            ],            "properties": {                "availabilitySet": {                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"                },                "hardwareProfile": {                    "vmSize": "[parameters('vmSize')]"                },                "osProfile": {                    "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",                    "adminUsername": "[parameters('adminUsername')]",                    "adminPassword": "[parameters('adminPassword')]"                },                "storageProfile": {                    "imageReference": {                        "publisher": "[parameters('imagePublisher')]",                        "offer": "[parameters('imageOffer')]",                        "sku": "[parameters('imageSKU')]",                        "version": "latest"                    },                    "osDisk": {                        "name": "osdisk",                        "vhd": {                            "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/','osdisk', copyindex(), '.vhd')]"                        },                        "caching": "ReadWrite",                        "createOption": "FromImage"                    }                },                "networkProfile": {                    "networkInterfaces": [                        {                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('networkInterfaceName'),copyindex()))]"                        }                    ]                }            }        }    ]}
